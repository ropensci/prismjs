% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/highlight.R
\name{prism_highlight_text}
\alias{prism_highlight_text}
\alias{prism_highlight_doc}
\alias{prism_highlight_html}
\alias{prism_languages}
\title{Prism Syntax Highlighter}
\usage{
prism_highlight_text(txt, language = "r")

prism_highlight_doc(doc)

prism_highlight_html(
  input,
  output = NULL,
  include_css = FALSE,
  preview = interactive()
)

prism_languages()
}
\arguments{
\item{txt}{string with code that you want to highlight}

\item{language}{the language that \code{txt} is in, one of \code{prism_languages()}.}

\item{doc}{an \link[xml2:read_xml]{xml2 document} that will be modified in place
such that all \verb{<code class="language-xyz">} elements are replaced with highlighted html.}

\item{input}{literal html string, connection, or file path, passed to \link[xml2:read_xml]{xml2::read_html}}

\item{output}{path to file or connection to write to, passed to \link[xml2:write_xml]{xml2::write_html}}

\item{include_css}{injects the required CSS style file into the html header}

\item{preview}{opens the generated output html in a browser}
}
\description{
The \code{prism_highlight_text} function takes a string with a single code snippet
and returns an html block with color classes. This html gets colorized by the
\href{https://cdnjs.com/libraries/prism}{prism stylesheet} when both are inserted
in an HTML document.
}
\details{
The functions \code{prism_highlight_doc} and \code{prism_highlight_html} work an entire
HTML documents, similar to what the client side JavaScript library does. They
automatically replace all \verb{<code class="language-xyz">} blocks in the document
with highlighted versions.
}
\examples{
html <- prism_highlight_text('p { color: red }', language = 'css')
cat(html)
prism_languages()
}
